RUN apt-get update && apt-get install -y \
        libpng-dev \
        zlib1g-dev \
        libxml2-dev \
        libzip-dev \
        libonig-dev \
        libpq-dev \
        libgd-dev \
        zip \
        curl \
        unzip \
        jpegoptim \
        optipng \
        pngquant \
        gifsicle

RUN docker-php-ext-configure gd --enable-gd --with-freetype --with-jpeg

RUN docker-php-ext-configure pgsql --with-pgsql=/usr/local/pgsql

RUN docker-php-ext-install \
        pdo \
        pdo_pgsql \
        pgsql \
        intl \
        gd \
        pdo_mysql \
        mysqli \
        zip

RUN docker-php-ext-configure exif

RUN docker-php-ext-install exif

RUN pecl install apcu

RUN docker-php-ext-enable apcu

RUN a2enmod rewrite

# Install Supervisor
RUN apt-get install -y supervisor

# Install npm
RUN yes | apt-get install nodejs
RUN yes | apt-get install npm

# Copy Supervisor configuration file for Laravel Queue Worker
COPY docker/prod/supervisord.conf /etc/supervisor/conf.d/supervisord.conf

# Install Composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Copy your Laravel application into the container
# COPY ../../ /var/www/html
COPY . /var/www/hml

# Copy your Apache virtual host configuration
COPY docker/prod/vhost.conf /etc/apache2/sites-available/000-default.conf

# Copy your php.ini configuration
COPY docker/prod/php.ini /usr/local/etc/php/php.ini

# Copy .env.example and rename it to .env
COPY .env.example /var/www/html/.env

# Expose port 80 (Apache)
EXPOSE 80

# Laravel-specific configurations
RUN composer install
RUN npm i
RUN npm run build
RUN php artisan key:generate
RUN php artisan cache:clear
RUN php artisan view:clear
RUN php artisan storage:link

# Custom entrypoint script
COPY docker/prod/entrypoint.sh /usr/local/bin/entrypoint.sh
RUN chmod +x /usr/local/bin/entrypoint.sh

# In order to fix it for now, I wil set 777 permissions. But this is very UNSAFE
# TODO: Investigate why 775 doesn't work - maybe problems with www-data USER?
#RUN chmod -R 775 /var/www/html/storage
RUN touch /var/www/html/storage/logs/laravel.log && \
    touch /var/www/html/storage/logs/scheduler.log && \
    touch /var/www/html/storage/logs/worker.log

# Set permissions
RUN chown -R www-data:www-data /var/www/html
RUN chown -R www-data:www-data /var/www/html/storage
RUN chmod -R 777 /var/www/html/storage

# Set the custom entrypoint script as CMD
CMD ["/usr/local/bin/entrypoint.sh"]
